name: Accuknox Semgrep Scan
description: Perform Semgrep scan on your repository and upload the results to Accuknox

inputs:
  token:
    description: 'The token for authenticating with the CSPM panel.'
    required: true

  tenant_id:
    description: "The ID of the tenant associated with the CSPM panel."
    required: true

  label:
    description: "The label created in AccuKnox SaaS for associating scan results."
    required: true

  endpoint:
    description: "The URL of the CSPM panel to push the scan results to."
    required: true
    default: "cspm.demo.accuknox.com"

  subcommand:
    description: 'Semgrep subcommand to run (e.g. ci, scan)'
    required: true
    default: 'scan'
    
  config:
    description: 'Semgrep ruleset or config file'
    required: false

  extra_args:
    description: 'Additional arguments to pass to semgrep'
    required: false
    default: ''

  paths:
    description: 'Paths to scan'
    required: false
    default: '.'

runs:
  using: 'composite'
  steps:
    - run: |
        semgrep ${{ inputs.subcommand }} \
          --json \
          --output /tmp/semgrep.json \
          ${{ inputs.config != '' && format('--config {0}', inputs.config) || '' }} \
          ${{ inputs.extra_args }} \
          ${{ inputs.paths }}

        # Stream process the JSONs
        jq -c . /tmp/semgrep.json | \
        jq --arg repo "${{ github.repository }}" \
           --arg sha "${{ github.sha }}" \
           --arg ref "${{ github.ref }}" \
           --arg run_id "${{ github.run_id }}" \
           --arg run_number "${{ github.run_number }}" \
           --arg github_url "${{ github.server_url }}/${{ github.repository }}" \
           --arg github_run_url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
           --arg source "$SOURCE" \
           '. + {
             repo: $repo,
             sha: $sha,
             ref: $ref,
             run_id: $run_id,
             run_number: $run_number,
             github_url: $github_url,
             github_run_url: $github_run_url,
             source: $source
           }' > semgrep-results.json
      shell: bash
      container:
        image: semgrep/semgrep
        
    - name: Push report to CSPM panel
      run: |
        if [[ ! -s semgrep-results.json ]]; then
          echo "No Issues found. Skipping API upload."
          exit 0
        fi
        
        RESPONSE=$(curl --location 'https://${{ inputs.endpoint }}/api/v1/artifact/?tenant_id=${{ inputs.tenant_id }}&data_type=SG&save_to_s3=true&label_id=${{ inputs.label }}' \
            --header 'Tenant-Id: ${{ inputs.tenant_id }}' \
            --header 'Authorization: Bearer ${{ inputs.token }}' \
            --form 'file=@./semgrep-results.json')

            echo "Response: $RESPONSE"
            if [[ "$RESPONSE" != *"File received successfully"* ]]; then
              echo "Error: Failed to push report to CSPM panel"
              exit 1
            fi
      shell: bash

outputs:
  results-file:
    description: 'Path to the JSON results file'
    value: semgrep-results.json